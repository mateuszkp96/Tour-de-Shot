name: Build backend

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile services
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: gradle -p app/core clean classes

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build and test services
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build and test project
        run: gradle -p app/core clean build
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: app/core/build/libs

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Build with docker and deploy to Kubernetes
    steps:
      - uses: actions/checkout@v2
      - name: Download build package
        uses: actions/download-artifact@v1
        with:
          name: Package
      - name: TODO build docker and deploy
        run: echo "TODO"

  build_front:
    runs-on: ubuntu-latest
    name: Build frontend
    strategy:
      matrix:
        node-version: [12.16.1]
    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version:  ${{ matrix.node-version }}
      - name: Install dependencies and Build
        run: |
          npm --prefix ui install
          npm --prefix ui run build