name: Backend flow

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'ui/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'ui/**'

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile services
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: gradle -p app/core clean classes

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build and test services
    services:
      mongo:
        image: mongo:4.0
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: secret
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build and test project
        run: gradle -p app/core clean build
      - uses: actions/upload-artifact@v1
        with:
          name: package
          path: app/core/build/libs

  deploy:
    runs-on: ubuntu-latest
    name: Deploy backend images
    if: github.event_name == 'push' && github.ref == 'master'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download build package
        uses: actions/download-artifact@v1
        with:
          name: package
          path: app/core/build/libs

      - name: Create dependency folder
        run:  mkdir -p app/core/build/dependency && (cd app/core/build/dependency; jar -xf ../libs/*.jar)

      - name: Publish to DockerHub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: mateusz43211/tourdeshot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: app/core
          tags: "core"
