name: Backend flow

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'ui/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'ui/**'

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile modules
    strategy:
      matrix:
        module: [core, user]
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Compile module ${{ matrix.module }}
        run: gradle -p app/${{ matrix.module }} clean classes

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build and test services
    services:
      mongo:
        image: mongo:4.0
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: secret
        ports:
          - 27017:27017
    strategy:
      matrix:
        module: [core, user]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build and test module ${{ matrix.module }}
        run: gradle -p app/${{ matrix.module }} clean build

      - name: Upload package module ${{ matrix.module }}
        uses: actions/upload-artifact@v1
        with:
          name: package_${{ matrix.module }}
          path: app/${{ matrix.module }}/build/libs

  deploy:
    runs-on: ubuntu-latest
    name: Deploy backend images
    if: github.event_name == 'push' && github.ref == 'master'
    needs: build
    strategy:
      matrix:
        module: [core, user]
    steps:
      - uses: actions/checkout@v2
      - name: Download build package module ${{ matrix.module }}
        uses: actions/download-artifact@v1
        with:
          name: package_${{ matrix.module }}
          path: app/${{ matrix.module }}/build/libs

      - name: Create dependency folder module ${{ matrix.module }}
        run:  mkdir -p app/${{ matrix.module }}/build/dependency && (cd app/${{ matrix.module }}/build/dependency; jar -xf ../libs/*.jar)

      - name: Publish to DockerHub module ${{ matrix.module }}
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: mateusz43211/tourdeshot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: app/${{ matrix.module }}
          tags: ${{ matrix.module }}
